version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: maritime-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ../monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - maritime-network

  grafana:
    image: grafana/grafana:latest
    container_name: maritime-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - maritime-network

  maritime-exporter:
    build:
      context: ..
      dockerfile: docker/Dockerfile.exporter
    container_name: maritime-exporter
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - maritime-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: maritime-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - maritime-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  maritime-network:
    driver: bridge